<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>To edit the valus of the PDF Variables.  Double Click on the selector column (var left column) for which variable you want to change.
Then update the Field Value CheckBox (2 Options)
1. Write in Custom Value
2. Select field from CSV from drop down
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYUEcAWFBHAlhQRwdRTEEATEU8AExF
        PAJMRTwGTUY9AEtDOwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlRSABZUUg1WVFIqlhQ
        R0dMRTweTEU8gkxFPIVMRTwDTEU8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWVFIAFlR
        SElZUUj6V1BH7k1GPdpMRTz/TEU8tkxFPAZMRTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABZUUgAWVFISVlRSPlZUUj/UEg//0xFPP9MRTy2TEU8BkxFPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFlRSABZUUhJWVFI+VlRSP9SS0L/TEU8/0xFPLZMRTwGTEU8AAAAAAAAAAAAAAAAAC6u
        8gAtrfI2Lq7yfy6u8n8urvJ/Lq7yfy6u8n8urvJ/Lq7yfy6u8n8qqPJ/HJPyfxuR8n8bkfJ/G5HyfxuR
        8n8bkfJ/G5HyfxuR8n8bkfJ/GZP4fTd0pqRYUkr8WVJK/1VNRP9MRT3/RFFa2h2O6oIbkfJ/G5HyfxuR
        8jUbkfIALq7yAC6u8n4urvL/Lq7y/y6u8v8trfL/LK3y/yyt8v8srfL/LK3y/yus8v8fmvL/GZDy/xmQ
        8v8ZkPL/GZDy/xmQ8v8ZkPL/GZDy/xmQ8v8ZkfX/LX/C/0BljP8ybbb/NWmp/y9nqv84Yob/HI/t/xuR
        8v8bkfL/G5HyfhuR8gAurvIALq7yfy6u8v8urvL/La7y/1q98v+AyvL/f8ry/3/K8v9/yvL/f8ry/3vE
        8f9ytev/cbTq/3G06v9xtOr/cbTq/3G06v9xtOr/crTq/12s7f8ljuT/H4rm/xuC8/8cffL/HXzw/yJ4
        2v8cie//G5Hy/xuR8v8bkfJ/G5HyAC6u8gAurvJ/Lq7y/y2t8v88s/L/qdny/9To8v/S5/L/0ufy/9Po
        8//T6PP/0+jz/87f6v/K2eP/ytnj/8rZ4//K2eP/ytnj/8nY4v/M2eL/kcHn/x2S8/8dlfP/JJzy/x6N
        8f8cg/D/HXzw/xyC8P8bkPL/G5Hy/xuR8n8bkfIALq7yAC6u8n8trvL/Wb3y/6nY8v/P5vL/0Oby/9Dm
        8v/K3+r/wdPc/8HT3P/B09z/v9DZ/7nHz/+5xs7/ucbO/7nGzv+5xs7/wtHb/8TW4/9hrev/GpDy/yWh
        8v8ur/L/JKDy/xuP8v8df/D/IH/v/ymS8P8bkfL/G5HyfxuR8gAurvIALq7yfyyt8v+Ay/L/1Ojy/9Dm
        8v/Q5vL/0ej0/6q3vP93dnL/d3Zy/3d2cv93dnL/dXRw/3Rybv90cm7/dHJu/3Rybv+nsLX/vdTl/0Kh
        7v8ZkfL/KKXy/y6v8v8rqvL/HZPy/xyB8P8jfu7/NZTv/xuR8v8bkfJ/G5HyAC6u8gAurvJ/LK3y/3/K
        8v/S5/L/0Oby/9Dm8v/Q5/P/xdji/7HAx/+xwMb/scDG/7HAxv+wvcP/q7W6/6u1uv+rtbr/q7W6/7fE
        zP/J1+H/gLrp/xqR8v8hmvL/LKvy/y2t8v8hk/H/Gnzv/0CP7P9krev/GZDy/xuR8n8bkfIALq7yAC6u
        8n8srfL/f8ry/9Ln8v/Q5vL/0Oby/9Ho9P+rt73/eHd0/3h3dP94d3T/eHd0/3h3dP92dHH/dXNw/3Vz
        cP90cm//hIWE/8TR2f+ex+f/LJjw/xqR8v8elvL/H5jy/xyJ8f8ffe//YaDq/26y6v8ZkPL/G5HyfxuR
        8gAurvIALq7yfyyt8v9/yvL/0ufy/9Dm8v/Q5vL/0Ofz/8XY4v+xwMf/scDG/7HAxv+xwMb/scDG/667
        wf+rtbr/q7W6/6u1uv+uub//uMXN/7nJ0/+myeT/S6Tu/yGT8v8nlvH/KJHw/4Ky5/++0uP/cbTq/xmQ
        8v8bkfJ/G5HyAC6u8gAurvJ/LK3y/3/K8v/S5/L/0Oby/9Dm8v/R6PT/q7e9/3h3dP94d3T/eHd0/3h3
        dP94d3T/d3Zz/3VzcP91c3D/dXNw/3Vzb/9zcW3/hIWD/8TR2f+z0Ob/nMXm/6bJ5f+exeb/xdbi/8rZ
        4v9xtOr/GZDy/xuR8n8bkfIALq7yAC6u8n8srfL/f8ry/9Ln8v/Q5vL/0Oby/9Dn8//F2OL/scDH/7HA
        xv+xwMb/scDG/7HAxv+xv8b/rLe9/6u1uv+rtbr/q7W6/6u1uv+uub//uMXN/7rHzv/E0tv/ydji/8nY
        4v/H1+L/ydji/3G06v8ZkPL/G5HyfxuR8gAurvIALq7yfyyt8v9/yvL/0ufy/9Dm8v/Q5vL/0ej0/6q3
        vP93dnL/d3Zy/3d2cv93dnL/d3Zy/3d2cv91dHD/dHJu/3Rybv90cm7/dHJu/3Rybv90cW3/dHFt/6Ss
        sf/I2eT/x9fi/8fX4v/J2OL/cbTq/xmQ8v8bkfJ/G5HyAC6u8gAurvJ/LK3y/3/K8v/S5/L/0Oby/9Dm
        8v/Q5vL/yt/q/8HT3P/B09z/wdPc/8LU3f/C1N7/wtTe/7/P2f+6x8//usfP/7rHz/+6x8//ucbO/7nG
        zv+5xs7/wtHb/8fX4v/H1+L/x9fi/8nY4v9xtOr/GZDy/xuR8n8bkfIALq7yAC6u8n8srfL/f8ry/9Ln
        8v/Q5vL/0Oby/9Dm8v/Q5vL/0efz/9Hn8//Q5vL/xdjj/8LU3v/C1N7/wNHb/7rI0P+6x8//usfP/73L
        1P/H1+L/yNjj/8jY4//H1+L/x9fi/8fX4v/H1+L/ydji/3G06v8ZkPL/G5HyfxuR8gAurvIALq7yfyyt
        8v+Ay/L/1Ojy/9Dm8v/Q5vL/0Oby/9Dm8v/Q5vL/0Ofz/8nd5/+GiYj/dXRw/3Z1cf92dXH/dHJu/3Rx
        bf9zcGz/g4SC/8DP2P/H2OP/x9fi/8fX4v/H1+L/x9fi/8fX4v/M2eL/crXq/xmQ8v8bkfJ/G5HyAC6u
        8gAurvJ/La7y/1m98v+p2PL/z+by/9Dm8v/Q5vL/0Oby/9Dm8v/Q5vL/z+Xx/8TX4f/B09z/wdPc/8HS
        2/+7ydH/ucbO/7nGzv+8ytP/xtbh/8fX4v/H1+L/x9fi/8fX4v/H1+L/xtbi/5zG5v9IpO7/GpDy/xuR
        8n8bkfIALq7yAC6u8n8urvL/La3y/zyz8v+p2fL/1Ojy/9Ln8v/S5/L/0ufy/9Ln8v/S5/L/0+jz/9Po
        8//T6PP/0+jz/83e6P/K2eP/ytnj/8rZ4//J2OL/ydji/8nY4v/J2OL/ydji/8vZ4v+cxub/KZfx/xmQ
        8v8bkfL/G5HyfxuR8gAurvIALq7yfy6u8v8urvL/La7y/1q98v+AyvL/f8ry/3/K8v9/yvL/f8ry/3/K
        8v9/yvL/f8ry/3/K8v9/yvL/d73t/3G06v9xtOr/cbTq/3G06v9xtOr/cbTq/3G06v9xtOr/crXq/0ik
        7v8ZkPL/G5Hy/xuR8v8bkfJ/G5HyAC6u8gAurvJ+Lq7y/y6u8v8urvL/La3y/yyt8v8srfL/LK3y/yyt
        8v8srfL/LK3y/yyt8v8srfL/LK3y/yyt8v8infL/GZDy/xmQ8v8ZkPL/GZDy/xmQ8v8ZkPL/GZDy/xmQ
        8v8ZkPL/GpDy/xuR8v8bkfL/G5Hy/xuR8n4bkfIALq7yAC6t8jcurvKALq7ygC6u8oAurvKALq7ygC6u
        8oAurvKALq7ygC6u8oAurvKALq7ygC6u8oAurvKALq7ygCSf8oAbkfKAG5HygBuR8oAbkfKAG5HygBuR
        8oAbkfKAG5HygBuR8oAbkfKAG5HygBuR8oAbkfKAG5HyNRuR8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////mf///4D///+A////gP///4D4AAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAAB//////////////////////////8=
</value>
  </data>
</root>